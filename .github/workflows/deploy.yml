name: ssh

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/deploy.yml"
      - "docker-compose.yml"
      - "Dockerfile"
      - "client/**"
      - "api/**"

jobs:
  ssh-agent: # Job Ïù¥Î¶Ñ
    runs-on: ubuntu-24.04 # GitHub ÏõåÌÅ¨Ïä§ÌéòÏù¥Ïä§ ÌôòÍ≤Ω

    steps: # Ïã§ÌñâÌï† ÏûëÏóÖ(step)
      - name: Discord Notification - Start
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          title: "üöÄ Î∞∞Ìè¨ ÏãúÏûë"
          description: |
            Repository: ${{ github.repository }}
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.event.head_commit.message }}
          color: 0x0000ff

      # ÏÜåÏä§ ÏΩîÎìúÎ•º ÏõåÌÅ¨Ïä§ÌéòÏù¥Ïä§Î°ú Ï≤¥ÌÅ¨ÏïÑÏõÉ
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      # GitHub Actions Cache ÏÑ§Ï†ï
      - name: Set Up Cache Repo
        uses: actions/cache@v4.2.0
        with:
          path: /tmp/.docker-cache
          key: docker-cache-${{ github.sha }}
          # Ïù¥Ï†Ñ Ï∫êÏâ¨ Î∂àÎü¨Ïò§Í∏∞
          restore-keys: docker-cache-

      - name: SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # ÏõêÍ≤© ÏÑúÎ≤ÑÏùò Ìò∏Ïä§Ìä∏ ÌÇ§Î•º known_hostsÏóê Ï∂îÍ∞ÄÌïòÏó¨ SSH Ïó∞Í≤∞ Ïã†Î¢∞ ÏÑ§Ï†ï
      - name: Add Host Key to Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      # DockerHub Î°úÍ∑∏Ïù∏ - Ïù¥ÎØ∏ÏßÄ Ìë∏ÏãúÎ•º ÏúÑÌïú Ïù∏Ï¶ù
      - name: DockerHub Login
        run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u '${{ secrets.DOCKER_USERNAME }}' --password-stdin

      # - name: Checkout code
      #   uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" >> .env
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
          echo "DATABASE_PORT=${{ secrets.DATABASE_PORT }}" >> .env
          echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" >> .env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env

      # Docker Buildx ÏÑ§Ï†ï
      - name: Set up Docker Buildx
        uses:
          docker/setup-buildx-action@v3

          # BuildKit ÎπåÎçî ÏÉùÏÑ±
      - name: Create BuildKit Builder
        run: |
          docker buildx create --use --name buildkit
          docker buildx use buildkit

      # Docker Ïù¥ÎØ∏ÏßÄ ÎπåÎìú
      - name: Docker Image Build
        run: |
          docker compose -f docker-compose.yml build --build-arg BUILDKIT_INLINE_CACHE=1

      # Docker Ïù¥ÎØ∏ÏßÄ Ìë∏Ïãú
      - name: Docker Image Push
        run: |
          docker compose -f docker-compose.yml push

      - name: Add Remote Server Fingerprint to Known Hosts
        run: ssh-keyscan -H -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts || true

      - name: Login DockerHub
        run: echo '${{ secrets.DOCKER_PASSWORD}}' | docker login -u '${{ secrets.DOCKER_USERNAME }}' --password-stdin

      - name: Docker Image Push
        run: docker compose -f docker-compose.yml push

      - name: Copy .env / docker-compose.yml
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "docker-compose.yml,.env"
          target: "~/github-actions-work-directory"

      - name: Pull Image & Up Container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ~/github-actions-work-directory
            docker compose -f docker-compose.yml pull
            docker compose -f docker-compose.yml down
            docker compose -f docker-compose.yml up -d

      # Discord ÏïåÎ¶º - Î∞∞Ìè¨ ÏÑ±Í≥µ
      - name: Discord Notification - Success
        if: success()
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          title: "‚úÖ Î∞∞Ìè¨ ÏÑ±Í≥µ"
          description: |
            Repository: ${{ github.repository }}
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.event.head_commit.message }}
          color: 0x00ff00

      # Discord ÏïåÎ¶º - Î∞∞Ìè¨ Ïã§Ìå®
      - name: Discord Notification - Failure
        if: failure()
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          title: "‚ùå Î∞∞Ìè¨ Ïã§Ìå®"
          description: |
            Repository: ${{ github.repository }}
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.event.head_commit.message }}
          color: 0xff0000
